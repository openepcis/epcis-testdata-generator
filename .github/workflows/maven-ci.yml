# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: checkout git submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Set up GraalVM 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          cache: maven
          server-id: openepcis-ossrh
          server-username: OPENEPCIS_OSSRH_USERNAME
          server-password: OPENEPCIS_OSSRH_PASSWORD

      - name: Compile and Verify Test Data Module
        run: |
          mvn \
            -s .mvn/settings.xml \
            --no-transfer-progress \
            --batch-mode \
            -Pcoverage \
            -Dsonar.host.url=${{ secrets.CG_SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.CG_SONAR_LOGIN }} \
            -B clean verify sonar:sonar
